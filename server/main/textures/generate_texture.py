#!/usr/bin/python

import argparse
import datetime
import numpy as np
import os
import pathlib

from PIL import Image

TEXEL_DATA_TYPE = "uint8_t"

parser = argparse.ArgumentParser()
parser.add_argument("texture_path", type=pathlib.Path, help="path to texture")
args = parser.parse_args()

in_texture = Image.open(args.texture_path)
#print(in_texture.format, in_texture.size, in_texture.mode)

R, G, B = in_texture.split()
R = np.asarray(R)
G = np.asarray(G)
B = np.asarray(B)

r = (R >> 6) << 6
g = (G >> 5) << 3
b = (B >> 5) << 0
#r = (R >> 5) << 5
#g = (G >> 5) << 2
#b = (B >> 6) << 0
P = r | g | b
out_texture = Image.fromarray(np.uint8(P)).transpose(Image.Transpose.TRANSPOSE)

#out_texture = in_texture.convert("L").transpose(Image.Transpose.TRANSPOSE)
#print(out_texture.format, out_texture.size, out_texture.mode)

texture_name = args.texture_path.stem
output_path  = texture_name + ".hpp"
texture_width, texture_height = out_texture.size

comment = f"Generated by {os.path.basename(__file__)} on {datetime.datetime.today().isoformat()}"

FILE_HEAD = """
#pragma once

// {4}

#include <cstdint>

namespace textures
{{

constexpr {0} {1}[{2} * {3}] = {{
""".format(TEXEL_DATA_TYPE, texture_name, texture_width, texture_height, comment)

FILE_TAIL = """
};

} // namespace textures
"""

gray_data = list(out_texture.getdata())
with open(output_path, "w") as out_file:
    out_file.write(FILE_HEAD)
    for i in range(texture_height):
        out_file.write(",".join(map(str, gray_data[i * texture_width : (i + 1) * texture_width])) + ",\n")
    out_file.write(FILE_TAIL)
print(f"Saved {texture_width}x{texture_height} {TEXEL_DATA_TYPE} texture data to {output_path}")

